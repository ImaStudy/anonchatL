from flask import Flask, request
import telebot
from telebot import types
import os

# === –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = "7694567532:AAF2ith3388eqkIwrfyCRLmzm7icLZsXDM0"
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)
WEBHOOK_HOST = 'https://anonchatbot-jbh9.onrender.com'
WEBHOOK_PATH = f"/{TOKEN}"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ===
user_gender = {}
user_age = {}
waiting_for_gender_change = set()
users_waiting = []
active_chats = {}
shown_welcome = set()

# === Flask –º–∞—Ä—à—Ä—É—Ç—ã ===
@app.route('/', methods=['GET'])
def index():
    return "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route(WEBHOOK_PATH, methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return '', 200

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ===
@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id
    if chat_id in user_gender and chat_id in user_age:
        return send_search_button(chat_id)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–ü–∞—Ä–µ–Ω—å", "–î–µ–≤—É—à–∫–∞")
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç ü§ñ\n–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª:", reply_markup=markup)

@bot.message_handler(commands=['search'])
@bot.message_handler(func=lambda m: m.text == "üîç –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")
def handle_search(message):
    chat_id = message.chat.id
    if chat_id in active_chats or chat_id in users_waiting:
        bot.send_message(chat_id, "–í—ã —É–∂–µ –∏—â–µ—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ.")
        return
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫")
    bot.send_message(chat_id, "üîé –ò—â–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...", reply_markup=markup)

    for user in users_waiting:
        if user != chat_id:
            users_waiting.remove(user)
            active_chats[chat_id] = user
            active_chats[user] = chat_id
            msg = "‚úÖ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!\n/next ‚Äî —Å–ª–µ–¥—É—é—â–∏–π\n/stop ‚Äî –≤—ã–π—Ç–∏"
            bot.send_message(chat_id, msg, reply_markup=types.ReplyKeyboardRemove())
            bot.send_message(user, msg, reply_markup=types.ReplyKeyboardRemove())
            return

    users_waiting.append(chat_id)

@bot.message_handler(func=lambda m: m.text in ["–ü–∞—Ä–µ–Ω—å", "–î–µ–≤—É—à–∫–∞"])
def handle_gender(message):
    chat_id = message.chat.id
    user_gender[chat_id] = message.text
    bot.send_message(chat_id, f"–ü–æ–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {message.text}", reply_markup=types.ReplyKeyboardRemove())
    bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç (–æ—Ç 18 –¥–æ 99):")
    bot.register_next_step_handler(message, handle_age)

def handle_age(message):
    chat_id = message.chat.id
    try:
        age = int(message.text)
        if 18 <= age <= 99:
            user_age[chat_id] = age
            bot.send_message(chat_id, f"–í–æ–∑—Ä–∞—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {age}")
            send_search_button(chat_id)
        else:
            raise ValueError
    except:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 18 –¥–æ 99:")
        bot.register_next_step_handler(message, handle_age)

@bot.message_handler(func=lambda m: m.text == "‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫")
def stop_search(message):
    chat_id = message.chat.id
    if chat_id in users_waiting:
        users_waiting.remove(chat_id)
        bot.send_message(chat_id, "–ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.", reply_markup=types.ReplyKeyboardRemove())
    send_search_button(chat_id)

@bot.message_handler(commands=['stop'])
def stop_chat(message):
    end_chat(message.chat.id, notify=True)

@bot.message_handler(commands=['next'])
def next_chat(message):
    end_chat(message.chat.id, notify=True)
    handle_search(message)

def end_chat(chat_id, notify=False):
    partner = active_chats.pop(chat_id, None)
    if partner:
        active_chats.pop(partner, None)
        if notify:
            bot.send_message(partner, "‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –≤—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞")
            bot.send_message(chat_id, "üö´ –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —á–∞—Ç")
            send_search_button(partner)
            send_search_button(chat_id)
    elif chat_id in users_waiting:
        users_waiting.remove(chat_id)
        if notify:
            bot.send_message(chat_id, "üö´ –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –æ—á–µ—Ä–µ–¥—å")
            send_search_button(chat_id)

def send_search_button(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if chat_id in active_chats:
        markup.add("/next", "/stop")
    elif chat_id in users_waiting:
        markup.add("‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫")
    else:
        markup.add("üîç –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")
    bot.send_message(chat_id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup)

# === –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@bot.message_handler(func=lambda msg: True)
def forward_messages(msg):
    chat_id = msg.chat.id
    partner = active_chats.get(chat_id)
    if partner:
        try:
            bot.send_message(partner, msg.text)
        except:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    else:
        if chat_id not in shown_welcome:
            shown_welcome.add(chat_id)
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å", callback_data="start"))
            bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ \"–ù–∞—á–∞—Ç—å\", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "start")
def inline_start(call):
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
    handle_start(call.message)

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port)
